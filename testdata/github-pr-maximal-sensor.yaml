#
# PR event workflow for osoriano/rollouts-demo
#
# It uses the following parameters:
# - repo - the url to the github repo
# - revision - the revision to check out for the repo
# - repo-short - the "org/name" portion of the github repo url
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: github-pr
spec:
  dependencies:
    - name: github-event-dep
      eventSourceName: github
      eventName: ghwebhook
      filters:
        data:
          # Type of Github event that triggered the delivery: [pull_request, push, issues, label, ...]
          # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
          - path: headers.X-Github-Event
            type: string
            value:
              - pull_request
          - path: body.action
            type: string
            value:
              - opened
          - path: body.pull_request.state
            type: string
            value:
              - open
          - path: body.pull_request.base.ref
            type: string
            value:
              - master
          - path: body.repository.clone_url
            type: string
            value:
              - https://github.com/osoriano/rollouts-demo.git
  triggers:
    - template:
        name: flow-trigger
        k8s:
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: github-pr-
              spec:
                templates:
                - name: main
                  inputs:
                    parameters:
                    - name: repo
                    - name: revision
                    - name: repo-short
                  dag:
                    tasks:
                    - name: github-check-start
                      arguments:
                        parameters:
                        - name: repo-short
                          value: '{{inputs.parameters.repo-short}}'
                        - name: event-type
                          value: PR
                        - name: revision
                          value: '{{inputs.parameters.revision}}'
                      templateRef:
                        clusterScope: true
                        name: cicd-templates
                        template: deploy-step-github-check-start
                    - name: DockerBuildTest
                      arguments:
                        parameters:
                        - name: repo
                          value: '{{inputs.parameters.repo}}'
                        - name: revision
                          value: '{{inputs.parameters.revision}}'
                        - name: dockerfile-path
                          value: subdir/Dockerfile
                        - name: docker-context-dir
                          value: subdir
                      template: dockerbuildtest
                - name: dockerbuildtest
                  inputs:
                    artifacts:
                    - git:
                        repo: '{{inputs.parameters.repo}}'
                        revision: '{{inputs.parameters.revision}}'
                      name: repo-source
                      path: /repo
                    parameters:
                    - name: repo
                    - name: revision
                    - name: dockerfile-path
                    - name: docker-context-dir
                  container:
                    args:
                    - --dockerfile=/repo/{{inputs.parameters.dockerfile-path}}
                    - --context=dir:///repo/{{inputs.parameters.docker-context-dir}}
                    - --no-push
                    image: gcr.io/kaniko-project/executor:latest
                    volumeMounts:
                    - mountPath: /volume-mount-path-1
                      name: volume-mount-1
                  volumes:
                  - name: volume-1
                    secret:
                      secretName: volume-secret-1
                entrypoint: main
                arguments:
                  parameters:
                  - name: repo
                  - name: revision
                  - name: repo-short
                serviceAccountName: deploy-step-executor
                activeDeadlineSeconds: 800
                hooks:
                  exit:
                    arguments:
                      parameters:
                      - name: repo-short
                        value: '{{workflow.parameters.repo-short}}'
                      - name: event-type
                        value: PR
                      - name: check-run-id
                        value: '{{workflow.outputs.parameters.check-run-id}}'
                      - name: workflow-status
                        value: '{{workflow.status}}'
                    templateRef:
                      clusterScope: true
                      name: cicd-templates
                      template: deploy-step-github-check-complete
          operation: create
          parameters:
            # Set the repo url in the workflow
            - src:
                dependencyName: github-event-dep
                dataKey: body.pull_request.head.repo.clone_url
              dest: spec.arguments.parameters.0.value
            # Set the revision to check out
            - src:
                dependencyName: github-event-dep
                dataKey: body.pull_request.head.sha
              dest: spec.arguments.parameters.1.value
            # Set the repo full_name in the workflow
            - src:
                dependencyName: github-event-dep
                dataKey: body.pull_request.head.repo.full_name
              dest: spec.arguments.parameters.2.value
            # Append pull request number and short sha to dynamically assign workflow name <rollouts-demo-pr-21500-2c065a>
            - src:
                dependencyName: github-event-dep
                dataTemplate: "{{ .Input.body.pull_request.number }}-{{ .Input.body.pull_request.head.sha | substr 0 7 }}-"
              dest: metadata.generateName
              operation: append
  template:
    serviceAccountName: operate-workflow-sa



