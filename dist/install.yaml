apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
    control-plane: controller-manager
  name: jettisonproj
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: flows.workflows.jettisonproj.io
spec:
  group: workflows.jettisonproj.io
  names:
    kind: Flow
    listKind: FlowList
    plural: flows
    singular: flow
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Flow is the Schema for the flows API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FlowSpec defines the desired state of Flow.
            properties:
              activeDeadlineSeconds:
                description: |-
                  Optional deadline in seconds for running the flow.
                  Flows which miss the deadline will be counted as failed.
                  Defaults to 900 (15 minutes) for PRs and 3600 (1 hr) for pushes
                format: int64
                type: integer
              steps:
                description: |-
                  List of steps to run for each trigger
                  See the concrete Step types in this package
                items:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              triggers:
                description: |-
                  List of triggers for running the flow.
                  See the concrete Trigger types in this package
                items:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            required:
            - steps
            - triggers
            type: object
          status:
            description: FlowStatus defines the observed state of Flow.
            properties:
              conditions:
                description: |-
                  Represents the observations of a Flow's current state.
                  Flow.status.conditions.type are: "Ready"
                  Flow.status.conditions.status are one of True, False
                  Flow.status.conditions.reason the value should be a CamelCase string and producers of specific
                  condition types may define expected values and meanings for this field, and whether the values
                  are considered a guaranteed API.
                  Flow.status.conditions.Message is a human readable message indicating details about the transition.
                  For further information see: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
  name: jettison-controller-manager
  namespace: jettisonproj
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
  name: jettison-leader-election-role
  namespace: jettisonproj
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
  name: jettison-flow-editor-role
rules:
- apiGroups:
  - workflows.jettisonproj.io
  resources:
  - flows
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workflows.jettisonproj.io
  resources:
  - flows/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
  name: jettison-flow-viewer-role
rules:
- apiGroups:
  - workflows.jettisonproj.io
  resources:
  - flows
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - workflows.jettisonproj.io
  resources:
  - flows/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jettison-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  - clusterworkflowtemplates
  - eventsources
  - sensors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  - workflows
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - workflows.jettisonproj.io
  resources:
  - flows
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - workflows.jettisonproj.io
  resources:
  - flows/finalizers
  verbs:
  - update
- apiGroups:
  - workflows.jettisonproj.io
  resources:
  - flows/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jettison-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jettison-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
  name: jettison-leader-election-rolebinding
  namespace: jettisonproj
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jettison-leader-election-role
subjects:
- kind: ServiceAccount
  name: jettison-controller-manager
  namespace: jettisonproj
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
  name: jettison-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jettison-manager-role
subjects:
- kind: ServiceAccount
  name: jettison-controller-manager
  namespace: jettisonproj
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jettison-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jettison-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: jettison-controller-manager
  namespace: jettisonproj
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-api
    control-plane: controller-manager
  name: jettison-api-service
  namespace: jettisonproj
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 2846
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
    control-plane: controller-manager
  name: jettison-controller-manager-metrics-service
  namespace: jettisonproj
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: jettison-controller
    control-plane: controller-manager
  name: jettison-controller-manager
  namespace: jettisonproj
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --workflow-mysql-address=root:root@tcp(mysql.mysql:3306)/argo
        command:
        - /manager
        image: ghcr.io/jettisonproj/jettison-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 2846
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /github-key
          name: github-key
      serviceAccountName: jettison-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: github-key
        secret:
          secretName: github-key
