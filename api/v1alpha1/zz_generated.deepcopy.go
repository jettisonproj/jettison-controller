//go:build !ignore_autogenerated

/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDStep) DeepCopyInto(out *ArgoCDStep) {
	*out = *in
	in.BaseStepFields.DeepCopyInto(&out.BaseStepFields)
	if in.BaseRef != nil {
		in, out := &in.BaseRef, &out.BaseRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDStep.
func (in *ArgoCDStep) DeepCopy() *ArgoCDStep {
	if in == nil {
		return nil
	}
	out := new(ArgoCDStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseStepFields) DeepCopyInto(out *BaseStepFields) {
	*out = *in
	if in.StepName != nil {
		in, out := &in.StepName, &out.StepName
		*out = new(string)
		**out = **in
	}
	if in.DependsOn != nil {
		in, out := &in.DependsOn, &out.DependsOn
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]corev1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]corev1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseStepFields.
func (in *BaseStepFields) DeepCopy() *BaseStepFields {
	if in == nil {
		return nil
	}
	out := new(BaseStepFields)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseTriggerFields) DeepCopyInto(out *BaseTriggerFields) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseTriggerFields.
func (in *BaseTriggerFields) DeepCopy() *BaseTriggerFields {
	if in == nil {
		return nil
	}
	out := new(BaseTriggerFields)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerBuildTestPublishStep) DeepCopyInto(out *DockerBuildTestPublishStep) {
	*out = *in
	in.BaseStepFields.DeepCopyInto(&out.BaseStepFields)
	if in.DockerfilePath != nil {
		in, out := &in.DockerfilePath, &out.DockerfilePath
		*out = new(string)
		**out = **in
	}
	if in.DockerContextDir != nil {
		in, out := &in.DockerContextDir, &out.DockerContextDir
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerBuildTestPublishStep.
func (in *DockerBuildTestPublishStep) DeepCopy() *DockerBuildTestPublishStep {
	if in == nil {
		return nil
	}
	out := new(DockerBuildTestPublishStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerBuildTestStep) DeepCopyInto(out *DockerBuildTestStep) {
	*out = *in
	in.BaseStepFields.DeepCopyInto(&out.BaseStepFields)
	if in.DockerfilePath != nil {
		in, out := &in.DockerfilePath, &out.DockerfilePath
		*out = new(string)
		**out = **in
	}
	if in.DockerContextDir != nil {
		in, out := &in.DockerContextDir, &out.DockerContextDir
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerBuildTestStep.
func (in *DockerBuildTestStep) DeepCopy() *DockerBuildTestStep {
	if in == nil {
		return nil
	}
	out := new(DockerBuildTestStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Flow) DeepCopyInto(out *Flow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Flow.
func (in *Flow) DeepCopy() *Flow {
	if in == nil {
		return nil
	}
	out := new(Flow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Flow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowList) DeepCopyInto(out *FlowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Flow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowList.
func (in *FlowList) DeepCopy() *FlowList {
	if in == nil {
		return nil
	}
	out := new(FlowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FlowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowSpec) DeepCopyInto(out *FlowSpec) {
	*out = *in
	if in.ActiveDeadlineSeconds != nil {
		in, out := &in.ActiveDeadlineSeconds, &out.ActiveDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]RawMessage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]RawMessage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowSpec.
func (in *FlowSpec) DeepCopy() *FlowSpec {
	if in == nil {
		return nil
	}
	out := new(FlowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowStatus) DeepCopyInto(out *FlowStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowStatus.
func (in *FlowStatus) DeepCopy() *FlowStatus {
	if in == nil {
		return nil
	}
	out := new(FlowStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitHubPullRequestTrigger) DeepCopyInto(out *GitHubPullRequestTrigger) {
	*out = *in
	out.BaseTriggerFields = in.BaseTriggerFields
	if in.BaseRef != nil {
		in, out := &in.BaseRef, &out.BaseRef
		*out = new(string)
		**out = **in
	}
	if in.PullRequestEvents != nil {
		in, out := &in.PullRequestEvents, &out.PullRequestEvents
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitHubPullRequestTrigger.
func (in *GitHubPullRequestTrigger) DeepCopy() *GitHubPullRequestTrigger {
	if in == nil {
		return nil
	}
	out := new(GitHubPullRequestTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitHubPushTrigger) DeepCopyInto(out *GitHubPushTrigger) {
	*out = *in
	out.BaseTriggerFields = in.BaseTriggerFields
	if in.BaseRef != nil {
		in, out := &in.BaseRef, &out.BaseRef
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitHubPushTrigger.
func (in *GitHubPushTrigger) DeepCopy() *GitHubPushTrigger {
	if in == nil {
		return nil
	}
	out := new(GitHubPushTrigger)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManualApprovalStep) DeepCopyInto(out *ManualApprovalStep) {
	*out = *in
	in.BaseStepFields.DeepCopyInto(&out.BaseStepFields)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManualApprovalStep.
func (in *ManualApprovalStep) DeepCopy() *ManualApprovalStep {
	if in == nil {
		return nil
	}
	out := new(ManualApprovalStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RawMessage) DeepCopyInto(out *RawMessage) {
	*out = *in
	if in.RawMessage != nil {
		in, out := &in.RawMessage, &out.RawMessage
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RawMessage.
func (in *RawMessage) DeepCopy() *RawMessage {
	if in == nil {
		return nil
	}
	out := new(RawMessage)
	in.DeepCopyInto(out)
	return out
}
